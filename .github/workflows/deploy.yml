name: React Native CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
  ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
  ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
  ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
  SUPPLY_JSON_KEY: ${{ secrets.SUPPLY_JSON_KEY }}
  APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
  APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
  APP_STORE_CONNECT_API_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_API_PRIVATE_KEY }}
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}

permissions:
  contents: write  # ✅ 권한 추가

jobs:
  android-build:
    name: Build & Deploy Android
    runs-on: macos-15-xlarge
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Setup Java & Gradle
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Decode Keystore
        run: echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > android/app/keystore.jks

      - name: Create Gradle Properties
        run: |
          echo "MYAPP_UPLOAD_STORE_FILE=keystore.jks" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=$ANDROID_KEY_ALIAS" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=$ANDROID_KEYSTORE_PASSWORD" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=$ANDROID_KEY_PASSWORD" >> android/gradle.properties

      - name: Build AAB
        run: |
          cd android
          ./gradlew bundleRelease
          echo "aab 파일 완성"

      - name: Setup Fastlane
        run: gem install fastlane --user-install

      - name: Decode SUPPLY_JSON_KEY and save to file
        run: echo "$SUPPLY_JSON_KEY" | base64 --decode > supply.json

      - name: Upload to Google Play
        run: fastlane supply --track production --aab android/app/build/outputs/bundle/release/app-release.aab
        env:
          SUPPLY_JSON_KEY_FILE: supply.json


  ios-build:
    name: Build & Deploy iOS
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts

      - name: Install Dependencies
        run: npm install

      - name: Install Fastlane
        run: gem install fastlane

      - name: Setup Match
        run: |
          echo "$APP_STORE_CONNECT_API_PRIVATE_KEY" | base64 --decode > AuthKey.p8
          fastlane match appstore --readonly
        

      - name: Build iOS App
        run: |
          cd ios
          xcodebuild -workspace rn.xcworkspace \
            -scheme Archive \
            -sdk iphoneos \
            -configuration Release \
            -archivePath $PWD/build/rn.xcarchive archive
          xcodebuild -exportArchive \
            -archivePath $PWD/build/rn.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath $PWD/build

      - name: Upload to TestFlight
        run: fastlane pilot upload --ipa ios/build/rn.ipa
