name: React Native CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}  # ✅ GitHub 인증을 위한 토큰
  BRANCH: ${{ secrets.BRANCH }}  # ✅ 배포할 브랜치
  COMMIT_AUTHOR: ${{ secrets.COMMIT_AUTHOR }}  # ✅ 커밋 작성자
  COMMIT_EMAIL: ${{ secrets.COMMIT_EMAIL }}  # ✅ 커밋 이메일
  COMMIT_MESSAGE: ${{ secrets.COMMIT_MESSAGE }}  # ✅ 커밋 메시지
  TARGET_REPO: ${{ secrets.TARGET_REPO }}  # ✅ 타깃 레포
  ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
  ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
  ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
  ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
  SUPPLY_JSON_KEY: ${{ secrets.SUPPLY_JSON_KEY }}
  APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
  APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
  APP_STORE_CONNECT_API_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_API_PRIVATE_KEY }}
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

permissions:
  contents: write  # ✅ 권한 추가

jobs:
  android-build:
    name: Build & Deploy Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Setup Java & Gradle
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Decode Keystore (Android)
        run: |
          set +x
          echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > android/app/keystore.jks
          set -x
      

      - name: Create Gradle Properties
        run: |
          echo "MYAPP_UPLOAD_STORE_FILE=keystore.jks" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=$ANDROID_KEY_ALIAS" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=$ANDROID_KEYSTORE_PASSWORD" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=$ANDROID_KEY_PASSWORD" >> android/gradle.properties

      - name: Version Update
        run: |
          awk '/versionCode/{sub($2, $2+1)}1' android/app/build.gradle > temp && mv temp android/app/build.gradle
          echo "Updated versionCode in build.gradle"
          git config --global user.email "$COMMIT_EMAIL"
          git config --global user.name "$COMMIT_AUTHOR"
          
          git remote add origin https://x-access-token:GITHUB_TOKEN@github.com/$TARGET_REPO
          
          git add android/app/build.gradle
          git commit -m 'build for versionCode plus 1'
          git push

      - name: Build AAB
        run: |
          cd android
          ./gradlew bundleRelease
          echo "aab 파일 완성"

      - name: Setup Fastlane
        run: gem install fastlane --user-install

      - name: Decode SUPPLY_JSON_KEY (Fastlane)
        run: |
          set +x
          echo "$SUPPLY_JSON_KEY" | base64 --decode > android/supply.json
          set -x

      - name: Set Environment Variable
        run: echo "SUPPLY_JSON_KEY=./supply.json" >> $GITHUB_ENV

      - name: Run Fastlane
        run: |
          cd android
          if ! fastlane supply init ; then echo "fastlane supply init failed, continuing..."; fi
          if ! fastlane supply --track internal --release-status draft --aab app/build/outputs/bundle/release/app-release.aab ; then echo "fastlane supply upload failed, continuing..."; fi

  ios-build:
    name: Build & Deploy iOS
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts

      - name: Install Dependencies
        run: npm install

      - name: Install Fastlane
        run: gem install fastlane

      - name: Setup Match
        run: |
          echo "$APP_STORE_CONNECT_API_PRIVATE_KEY" | base64 --decode > AuthKey.p8
          fastlane match appstore --readonly
        

      - name: Build iOS App
        run: |
          cd ios
          xcodebuild -workspace rn.xcworkspace \
            -scheme Archive \
            -sdk iphoneos \
            -configuration Release \
            -archivePath $PWD/build/rn.xcarchive archive
          xcodebuild -exportArchive \
            -archivePath $PWD/build/rn.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath $PWD/build

      - name: Upload to TestFlight
        run: fastlane pilot upload --ipa ios/build/rn.ipa
